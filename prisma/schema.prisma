generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Certification {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String    @db.VarChar(255)
  issuedBy    String    @db.VarChar(255)
  description String
  url         String    @db.VarChar(255)
  issuedOn    DateTime
  expires     DateTime?
}

model Course {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String   @db.VarChar(255)
  imageUrl    String?  @db.VarChar(255)
  description String?

  instructors      CourseInstructor[]
  links            CourseLink[]
  courseListGroups CourseListGroup[]
}

model CourseLink {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  title           String   @db.VarChar(255)
  url             String   @db.VarChar(255)
  coursePlaformId String
  courseId        String?

  courseInstructors CourseInstructor[]
  coursePlatform    CoursePlaform      @relation(fields: [coursePlaformId], references: [id])
  course            Course?            @relation(fields: [courseId], references: [id])
}

model CourseListGroup {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String   @db.VarChar(255)
  title       String   @db.VarChar(255)
  description String?

  courses Course[]
}

model CourseInstructor {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)
  imageUrl  String?  @db.VarChar(255)

  coursePlatforms CoursePlaform[]
  courseLinks     CourseLink[]
  courses         Course[]
}

model CoursePlaform {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String   @db.VarChar(255)
  url       String   @db.VarChar(255)
  imageUrl  String?  @db.VarChar(255)

  courseLinks       CourseLink[]
  courseInstructors CourseInstructor[]
}

model Job {
  id                 String    @id @default(uuid())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  title              String    @db.VarChar(255)
  company            String    @db.VarChar(255)
  startDate          DateTime
  endDate            DateTime?
  shortDescription   String
  techUsed           String[]
  methodologiesUsed  String[]
  descriptionBullets String[]
}

model Project {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  name        String   @db.VarChar(255)
  description String
  url         String   @db.VarChar(255)
}

model Summary {
  id              String   @id @default(uuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  name            String   @db.VarChar(255)
  email           String   @db.VarChar(255)
  address         String   @db.VarChar(255)
  website         String   @db.VarChar(255)
  github          String   @db.VarChar(255)
  linkedIn        String   @db.VarChar(255)
  summary         String
  experienceStart DateTime
}
